openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- description: Generated server url
  url: http://localhost:8080
paths:
  /api/user/update:
    post:
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
          description: OK
      tags:
      - user-controller
      x-content-type: application/json
      x-accepts: application/json
  /api/task/update:
    post:
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaskResponse'
          description: OK
      tags:
      - task-controller
      x-content-type: application/json
      x-accepts: application/json
  /api/task/read:
    post:
      operationId: read
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadTaskResponse'
          description: OK
      tags:
      - task-controller
      x-content-type: application/json
      x-accepts: application/json
  /api/task/read-due:
    post:
      operationId: readDue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadDueTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadDueTaskResponse'
          description: OK
      tags:
      - task-controller
      x-content-type: application/json
      x-accepts: application/json
  /api/task/read-all:
    post:
      operationId: readAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadAllTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadAllTaskResponse'
          description: OK
      tags:
      - task-controller
      x-content-type: application/json
      x-accepts: application/json
  /api/task/delete:
    post:
      operationId: delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTaskResponse'
          description: OK
      tags:
      - task-controller
      x-content-type: application/json
      x-accepts: application/json
  /api/task/create:
    post:
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskResponse'
          description: OK
      tags:
      - task-controller
      x-content-type: application/json
      x-accepts: application/json
  /api/auth/register:
    post:
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
          description: OK
      tags:
      - auth-controller
      x-content-type: application/json
      x-accepts: application/json
  /api/auth/login:
    post:
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: OK
      tags:
      - auth-controller
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    UpdateUserRequest:
      example:
        firstname: firstname
        token: token
        lastname: lastname
      properties:
        token:
          type: string
        firstname:
          type: string
        lastname:
          type: string
      required:
      - firstname
      - lastname
      - token
      type: object
    UpdateUserResponse:
      example:
        firstname: firstname
        lastname: lastname
      properties:
        firstname:
          type: string
        lastname:
          type: string
      type: object
    UpdateTaskRequest:
      example:
        newName: newName
        due: 2000-01-23T04:56:07.000+00:00
        name: name
        details: details
        token: token
      properties:
        token:
          type: string
        name:
          type: string
        newName:
          type: string
        details:
          type: string
        due:
          format: date-time
          type: string
      required:
      - details
      - due
      - name
      - newName
      - token
      type: object
    UpdateTaskResponse:
      example:
        due: 2000-01-23T04:56:07.000+00:00
        name: name
        details: details
      properties:
        name:
          type: string
        details:
          type: string
        due:
          format: date-time
          type: string
      type: object
    ReadTaskRequest:
      example:
        name: name
        token: token
      properties:
        token:
          type: string
        name:
          type: string
      required:
      - name
      - token
      type: object
    ReadTaskResponse:
      example:
        due: 2000-01-23T04:56:07.000+00:00
        name: name
        details: details
      properties:
        name:
          type: string
        details:
          type: string
        due:
          format: date-time
          type: string
      type: object
    DueInfo:
      example:
        unit:
          duration:
            zero: true
            seconds: 0
            negative: true
            nano: 6
            units:
            - durationEstimated: true
              timeBased: true
              dateBased: true
            - durationEstimated: true
              timeBased: true
              dateBased: true
          durationEstimated: true
          timeBased: true
          dateBased: true
        amount: 1
      properties:
        unit:
          $ref: '#/components/schemas/DueInfo_unit'
        amount:
          format: int32
          type: integer
      type: object
    ReadDueTaskRequest:
      example:
        dueInfo:
          unit:
            duration:
              zero: true
              seconds: 0
              negative: true
              nano: 6
              units:
              - durationEstimated: true
                timeBased: true
                dateBased: true
              - durationEstimated: true
                timeBased: true
                dateBased: true
            durationEstimated: true
            timeBased: true
            dateBased: true
          amount: 1
        token: token
      properties:
        token:
          type: string
        dueInfo:
          $ref: '#/components/schemas/DueInfo'
      required:
      - dueInfo
      - token
      type: object
    ReadDueTaskResponse:
      example:
        list:
        - due: 2000-01-23T04:56:07.000+00:00
          name: name
        - due: 2000-01-23T04:56:07.000+00:00
          name: name
      properties:
        list:
          items:
            $ref: '#/components/schemas/TaskInfo'
          type: array
      type: object
    TaskInfo:
      example:
        due: 2000-01-23T04:56:07.000+00:00
        name: name
      properties:
        name:
          type: string
        due:
          format: date-time
          type: string
      type: object
    ReadAllTaskRequest:
      example:
        token: token
      properties:
        token:
          type: string
      required:
      - token
      type: object
    ReadAllTaskResponse:
      example:
        list:
        - due: 2000-01-23T04:56:07.000+00:00
          name: name
        - due: 2000-01-23T04:56:07.000+00:00
          name: name
      properties:
        list:
          items:
            $ref: '#/components/schemas/TaskInfo'
          type: array
      type: object
    DeleteTaskRequest:
      example:
        name: name
        token: token
      properties:
        token:
          type: string
        name:
          type: string
      required:
      - name
      - token
      type: object
    DeleteTaskResponse:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    CreateTaskRequest:
      example:
        due: 2000-01-23T04:56:07.000+00:00
        name: name
        details: details
        token: token
      properties:
        token:
          type: string
        name:
          type: string
        details:
          type: string
        due:
          format: date-time
          type: string
      required:
      - details
      - due
      - name
      - token
      type: object
    CreateTaskResponse:
      example:
        due: 2000-01-23T04:56:07.000+00:00
        name: name
      properties:
        name:
          type: string
        due:
          format: date-time
          type: string
      type: object
    RegisterRequest:
      example:
        firstname: firstname
        password: password
        email: email
        lastname: lastname
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
      required:
      - email
      - firstname
      - lastname
      - password
      type: object
    RegisterResponse:
      example:
        email: email
      properties:
        email:
          type: string
      type: object
    LoginRequest:
      example:
        password: password
        email: email
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
      type: object
    LoginResponse:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
    DueInfo_unit_duration_units_inner:
      example:
        durationEstimated: true
        timeBased: true
        dateBased: true
      properties:
        durationEstimated:
          type: boolean
        timeBased:
          type: boolean
        dateBased:
          type: boolean
      type: object
    DueInfo_unit_duration:
      example:
        zero: true
        seconds: 0
        negative: true
        nano: 6
        units:
        - durationEstimated: true
          timeBased: true
          dateBased: true
        - durationEstimated: true
          timeBased: true
          dateBased: true
      properties:
        seconds:
          format: int64
          type: integer
        zero:
          type: boolean
        nano:
          format: int32
          type: integer
        negative:
          type: boolean
        units:
          items:
            $ref: '#/components/schemas/DueInfo_unit_duration_units_inner'
          type: array
      type: object
    DueInfo_unit:
      example:
        duration:
          zero: true
          seconds: 0
          negative: true
          nano: 6
          units:
          - durationEstimated: true
            timeBased: true
            dateBased: true
          - durationEstimated: true
            timeBased: true
            dateBased: true
        durationEstimated: true
        timeBased: true
        dateBased: true
      properties:
        durationEstimated:
          type: boolean
        duration:
          $ref: '#/components/schemas/DueInfo_unit_duration'
        timeBased:
          type: boolean
        dateBased:
          type: boolean
      type: object

